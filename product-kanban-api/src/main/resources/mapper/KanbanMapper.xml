<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.productkanbanapi.mapper.KanbanMapper">

    <resultMap id="BaseResultMap" type="com.example.productkanbanapi.entity.NotInStorage">
        <result property="partNumber" column="PartNumber" jdbcType="VARCHAR"/>
        <result property="batch" column="Batch" jdbcType="VARCHAR"/>
        <result property="uid" column="UID" jdbcType="VARCHAR"/>
        <result property="quantity" column="Quantity" jdbcType="FLOAT"/>
        <result property="storageLoc" column="ToStock" jdbcType="VARCHAR"/>
        <result property="state" column="Status" jdbcType="VARCHAR"/>
        <result property="wo" column="PO_NUMBER" jdbcType="VARCHAR"/>
        <result property="recTime" column="TransactionTime" jdbcType="TIMESTAMP"/>
        <result property="plant" column="Plant" jdbcType="VARCHAR"/>
    </resultMap>

    <resultMap id="StorageMap" type="com.example.productkanbanapi.entity.StorageReport">
        <result property="partNumber" column="partnumber" jdbcType="VARCHAR"/>
        <result property="po" column="po" jdbcType="VARCHAR"/>
        <result property="batch" column="batch" jdbcType="VARCHAR"/>
        <result property="wo" column="wo" jdbcType="VARCHAR"/>
        <result property="uid" column="uid" jdbcType="VARCHAR"/>
        <result property="quantity" column="quantity" jdbcType="FLOAT"/>
        <result property="storageLoc" column="stock" jdbcType="VARCHAR"/>
        <result property="state" column="state" jdbcType="VARCHAR"/>
        <result property="recTime" column="rec_time" jdbcType="TIMESTAMP"/>
        <result property="plant" column="plant" jdbcType="VARCHAR"/>
        <result property="createUser" column="create_user" jdbcType="VARCHAR"/>
        <result property="createTime" column="create_time" jdbcType="TIMESTAMP"/>
    </resultMap>

    <resultMap id="RecMap" type="com.example.productkanbanapi.entity.RecReport">
        <result property="partNumber" column="PartNumber" jdbcType="VARCHAR"/>
        <result property="batch" column="Batch" jdbcType="VARCHAR"/>
        <result property="wo" column="PO_NUMBER" jdbcType="VARCHAR"/>
        <result property="uid" column="UID" jdbcType="VARCHAR"/>
        <result property="quantity" column="Quantity" jdbcType="FLOAT"/>
        <result property="fromStock" column="FromStock" jdbcType="VARCHAR"/>
        <result property="toStock" column="ToStock" jdbcType="VARCHAR"/>
        <result property="plant" column="Plant" jdbcType="VARCHAR"/>
        <result property="transactionUser" column="TransactionUser" jdbcType="VARCHAR"/>
        <result property="transactionTime" column="TransactionTime" jdbcType="TIMESTAMP"/>
        <result property="transactionType" column="TransactionType" jdbcType="VARCHAR"/>
        <result property="refDocNo" column="RefDocNo" jdbcType="VARCHAR"/>
        <result property="docHeader" column="DocHeader" jdbcType="VARCHAR"/>
    </resultMap>

    <resultMap id="ShipmentMap" type="com.example.productkanbanapi.entity.Shipment">
        <result property="shipmentNo" column="shipment_number" jdbcType="VARCHAR"/>
        <result property="shipmentDate" column="shipment_date" jdbcType="TIMESTAMP"/>
        <result property="shipmentCar" column="shipment_car" jdbcType="VARCHAR"/>
        <result property="toNo" column="to_no" jdbcType="VARCHAR"/>
        <result property="state" column="state" jdbcType="VARCHAR"/>
        <result property="toQty" column="to_quantity" jdbcType="FLOAT"/>
        <result property="shipmentQty" column="shipment_quantity" jdbcType="FLOAT"/>
        <result property="palletQty" column="pallet_quantity" jdbcType="FLOAT"/>
        <result property="boxQty" column="box_quantity" jdbcType="FLOAT"/>
        <result property="clientCode" column="client_code" jdbcType="VARCHAR"/>
    </resultMap>

    <!-- ew.customSqlSegment -> 条件构造器拼接语句（一定要加，否则会出现变量设置问题） -->
    <!-- 字段不能加 []，mybatis plus 不能识别 []，有 bug -->
    <select id="findNotInStock" resultMap="BaseResultMap">
        select row_number() over (order by TransactionTime desc) as item,
               PartNumber,
               PO_NUMBER,
               Batch,
               UID,
               Quantity,
               ToStock,
               TransactionTime,
               Plant,   
               '待上架'                                     as Status
        from xTend_MaterialTransactions
        ${ew.customSqlSegment}
    </select>

    <select id="findWarehousedUid" resultType="java.lang.String">
        select distinct uid
        from (select uid
              from fg_inventory fi
              union
              select uid
              from fg_inventory_out fio) warehoused
        ${ew.customSqlSegment}
    </select>

    <select id="findInStock" resultMap="StorageMap">
        select partnumber,
               po,
               batch,
               wo,
               uid,
               quantity,
               stock,
               (case when status = 0 then '已预留' when status = 1 then '未预留' end) as state,
               rec_time,
               plant,
               create_user,
               create_time
        from fg_inventory
        ${ew.customSqlSegment}
    </select>

    <select id="findRec" resultMap="RecMap">
        select Batch,
               PartNumber,
               PO_NUMBER,
               UID,
               Quantity,
               FromStock,
               ToStock,
               TransactionUser,
               TransactionTime,
               TransactionType,
               RefDocNo,
               DocHeader,
               Plant
        from xTend_MaterialTransactions
        ${ew.customSqlSegment}
    </select>

    <select id="findShipment" resultMap="ShipmentMap">
        select shipment_date,
               shipment_car,
               shipment_number,
               to_no,
               client_code,
               (case
                    when tos1.status = 0 then '待拣货'
                    when tos1.status = 1 then '备货中'
                    when tos1.status = 2 and tos1.stock is not null and tos1.is_loading_truck = '待装车' then '待装车'
                    when tos1.status = 2 and tos1.stock is null then '待绑定出货区'
                   end)      as state,
               tos1.quantity  as to_quantity,
               ship1.quantity as shipment_quantity,
               boxcount      as box_quantity,
               pellet_qty    as pallet_quantity
        from fg_tos tos1
                 left join fg_shipmentinfo ship1 on tos1.shipment_no = ship1.shipment_number
        ${ew.customSqlSegment}
    </select>

    <select id="findPnByShipNo" resultType="java.lang.String">
        select distinct pn
        from fg_shipmentinfo
        ${ew.customSqlSegment}
    </select>

</mapper>
